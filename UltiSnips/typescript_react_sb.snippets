priority -50

snippet sb-stories-tpl
import { ComponentStory, ComponentMeta } from '@storybook/react'
import React from 'react'
import { ${2} } from '${1}'

type $2Type = typeof $2

export default {
	title: '${3:Components}/${4:$2}',
	component: $2,${5:
	argTypes: {
		bg: {
			control: 'color',
		},
	},}
} as ComponentMeta<$2Type>

export const Basis: ComponentStory<$2Type> = (args) => {
	return <$2 {...args} />
}
Basis.args = {
	$0
}
endsnippet

snippet sb-default-stories-tpl
import { ComponentStory, ComponentMeta } from '@storybook/react'
import React from 'react'
import ${2} from '${1}'

type $2Type = typeof $2

export default {
	title: '${3:Components}/${4:$2}',
	component: $2,${5:
	argTypes: {
		bg: {
			control: 'color',
		},
	},}
} as ComponentMeta<$2Type>

export const Basis: ComponentStory<$2Type> = (args) => {
	return <$2 {...args} />
}
Basis.args = {
	$0
}
endsnippet

snippet sb-json-hook-stories-tpl
import { ComponentStory, ComponentMeta } from '@storybook/react'
import React from 'react'
import ReactJson from 'react-json-view'
import { ${2} } from '${1}'

type ReactJsonType = typeof ReactJson

export default {
	title: '${3:Hooks}/${4:$2}',
	component: ReactJson,${5:
	parameters: {
		viewport: {
			defaultViewport: 'reset',
		},
	},}
} as ComponentMeta<ReactJsonType>

export const Basis: ComponentStory<ReactJsonType> = () => {
	const data = $2()

	return <ReactJson src={data || {}} collapsed={1} />
}
Basis.args = {}
endsnippet

snippet sb-multi-stories-tpl
import { ComponentStory, ComponentMeta } from '@storybook/react'
import React from 'react'
import { ${2} } from '${1}'

type $2Type = typeof $2

export default {
	title: '${3:Components}/${4:$2}',
	component: $2,${5:
	argTypes: {
		bg: {
			control: 'color',
		},
	},}
} as ComponentMeta<$2Type>

const Template: ComponentStory<$2Type> = (args) => {
	return <$2 {...args} />
}

export const Basis = Template.bind({})
Basis.args = {
	$0
}
endsnippet

