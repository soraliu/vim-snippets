priority -50

snippet react-component-tpl
// deps
import React, { type FC } from 'react'

// type definitions
export type Props = Record<string, unknown>

// global variables

// global functions

// ui components

const ${1}: FC<Props> = () => {
	// precheck

	// use state

	// use data

	// local variables

	// local functions

	// effects

	// flow control

	return <>
		${2:$1}
	</>
}

export default $1
endsnippet

snippet react-api-hook-tpl
import { useQuery, UseQueryOptions } from 'react-query'

export const REQ_URL = '${2}'

export type Req = {}

export type Res = {}

export async function ${1}(params: Req): Promise<Res> {
	// do some precheck
	// if (!params) return null

	const data = await Promise.resolve([])

	return data?.data || []
}

export function use${1/\w+\s*/\u$0/}(params: Req, options?: UseQueryOptions<Res>) {
	return useQuery([REQ_URL], () =>
		$1(params),
		options
	)
}
endsnippet
