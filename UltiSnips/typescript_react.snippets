priority -50

snippet react-component-tpl
// deps
import React, { FC, useState } from 'react'

// type definitions
export type Props = {}

// global variables

// global functions

// ui components

const ${1}: FC<Props> = () => {
	// use state
	const [${3/\w+\s*/\l$0/}, set${3:State}] = useState(null)

	// use data

	// local variables

	// local functions

	// effects

	return <>
		${2:$1}
	</>
}

export default $1
endsnippet

snippet react-api-hook-tpl
import { canalGet } from '@bytecloud/cicd'
import { useQuery, QueryOptions } from 'react-query'

export const REQ_URL = '${2}'

export type Req = {}

export type Res = {}

export async function ${1}(params: Req): Promise<Res> {
	// do some precheck
	// if (!params) return null

	const data = await canalGet(REQ_URL, params)

	return data?.data || []
}

export function use${1/\w+\s*/\u$0/}(params: Req, options?: QueryOptions) {
	return useQuery([REQ_URL], () =>
		$1(params),
		options
	)
}
endsnippet
