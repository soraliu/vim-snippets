# Snippet for tsconfig

priority -50

snippet tsconfig-json-umi "umi's tsconfig"
{
	"compilerOptions": {
		"target": "esnext",
		"module": "esnext",
		"moduleResolution": "node",
		"importHelpers": true,
		"jsx": "preserve",
		"esModuleInterop": true,
		"sourceMap": true,
		"baseUrl": ".",
		"paths": {
			"@/*": ["src/*"]
		},
		"allowSyntheticDefaultImports": true
	}
}
endsnippet

snippet tsconfig-json-base "base tsconfig"
{
	"compilerOptions": {
		// Type Checking
		"allowUnreachableCode": false,
		"allowUnusedLabels": false,
		"noUnusedLocals": false,
		"noUnusedParameters": true,
		"noImplicitAny": true,
		"noImplicitReturns": true,
		"strict": true,

		// Module
		"module": "ES2020",
		"moduleResolution": "Node",
		"resolveJsonModule": true,
		"types": ["node"], // if types is specified, only packages listed will be included in the global scope

		// Emit
		"declaration": true,
		"baseUrl": ".",
		"declarationDir": "dist/types",
		"outDir": "dist/esm",
		"importHelpers": true,
		"removeComments": false,
		"sourceMap": true,

		// Interop Constraints
		"allowSyntheticDefaultImports": true,
		"esModuleInterop": true, // the ES6 modules spec states that a namespace import (import * as x) can only be an object
		"forceConsistentCasingInFileNames": true,
		"isolatedModules": true, // all implementation files must be modules
		"preserveSymlinks": true,

		// Language and Environment
		"emitDecoratorMetadata": true,
		"experimentalDecorators": true,
		"jsx": "react-jsx", // React >= 17
		"lib": ["ES2015", "ES2016", "ES2017", "ES2018", "ES2019", "ES2020", "ES2021", "ESNext", "DOM"],
		"target": "ES5",

		// Completeness
		"skipLibCheck": true,

		// Output Formatting
		"pretty": true
	},
	"include": ["**/*"],
	"ts-node": {
		"compilerOptions": {
			// ts-node does not support any module syntax other than commonjs
			"module": "CommonJS"
		}
	}
}
endsnippet

snippet tsconfig-json-base-extend "extend base tsconfig"
{
	"extends": "../../../tsconfig.json",
	"compilerOptions": {
		"baseUrl": "./src",
		"declarationDir": "dist/types",
		"outDir": "dist/esm"
	},
	"include": ["**/*"]
}
endsnippet

snippet swcrc-base
{
	"exclude": [
		".*.stories.tsx$",
		".*.test.tsx$"
	],
	"jsc": {
		"parser": {
			"syntax": "typescript",
			"tsx": false,
			"decorators": false,
			"dynamicImport": false
		},
		"transform": null,
		"target": "es2015",
		"loose": false,
		"externalHelpers": false,
		"keepClassNames": false
	},
	"module": {
		"type": "es6",
		"strict": false,
		"strictMode": true,
		"lazy": false,
		"noInterop": false
	}
}
endsnippet
